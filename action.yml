name: "Wait on Workflow"
branding:
  icon: "clock"
  color: "green"
description: "Waits on a specified workflow to complete before proceeding"
inputs:
  github-token:
    description: "GitHub token to access the repository"
    default: "${{ github.token }}"
  workflow:
    description: "Run ID or file name of the workflow to wait on"
    required: true
  max-wait:
    description: "Maximum time the script will wait on the workflow run to be found (minutes)"
    default: 5
  interval:
    description: "Interval between checking workflow status (seconds)"
    default: 10
  timeout:
    description: "Maximum time the script will wait on the workflow run to be finished (minutes)"
    default: 30
  repository:
    description: "Repository name with owner where the workflow is running"
    default: "${{ github.repository }}"
  sha:
    description: "Head commit reference to watch for the workflow run"
    default: "${{ github.sha }}"
  verbose:
    description: "Enable verbose output"
    default: false
outputs:
  run-id:
    description: "ID of the workflow run"
    value: ${{ steps.wait-on-workflow.outputs.run-id }}
  conclusion:
    description: "Conclusion of the workflow run. Can be one of the `success`, `failure`, `neutral`, `cancelled`, `skipped`, `timed_out`, or `action_required`"
    value: ${{ steps.wait-on-workflow.outputs.conclusion }}
runs:
  using: "composite"
  steps:
    - name: Set execute permissions for script
      run: chmod +x ${{ github.action_path }}/scripts/wait-on-workflow.sh
      shell: bash
    - id: wait-on-workflow
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        WORKFLOW: ${{ inputs.workflow }}
        MAX_WAIT: ${{ inputs.max-wait }}
        INTERVAL: ${{ inputs.interval }}
        TIMEOUT: ${{ inputs.timeout }}
        REPOSITORY: ${{ inputs.repository }}
        SHA: ${{ inputs.sha }}
        VERBOSE: ${{ inputs.verbose }}
      run: |
        ${{ github.action_path }}/scripts/wait-on-workflow.sh
